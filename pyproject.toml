[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fitness-rewards"
version = "0.1.0"
description = "Fitness Rewards API - Receives and analyzes workout data from ESP32 device"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "aiohttp>=3.9.0",
    "python-telegram-bot>=21.0.0",
    "httpx>=0.25.0",
    "pyatv>=0.16.1",
]

[project.scripts]
fitness-rewards-server = "fitness_rewards.main:main"
fitness-rewards-telegram = "clients.telegram_bot:main"
fitness-rewards-tv = "clients.tv_consumer:main"

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "pytest-mock>=3.12.0",
    "freezegun>=1.2.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "pytest-mock>=3.12.0",
    "freezegun>=1.2.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[dependency-groups]
dev = [
    "freezegun>=1.5.5",
    "httpx>=0.28.1",
    "pytest>=8.4.2",
    "pytest-mock>=3.15.0",
]
